    public boolean verifyType(String type, String data) {
        String [] values = data.split(SEPARATOR);
        for(int i=0; i<values.length; i++) {
            if(getType(values[i]).equals(type)) {
                return false;
            }
        }
        return true;
    } 



    public boolean isInLocalScope(String key) {
        for(int i=0; i<localScopes.size(); i++) {
            if(localScopes.get(i).containsKey(key)) {
                return true;
            }
        }
        return false;
    }



    public boolean verifyArrayDeclaration(String type, String data) {
        String[] values = data.split(SEPARATOR);
        for(int i=0; i<values.length; i++) {
            if(!type.equals(values[i])) {
                return false;
            }
        }
        return true;
    }




.data
mensaje_input: .asciiz "Ingrese un nÃºmero: "
mensaje_output: .asciiz "Su factorial es: "
n: .word 0               

.text
.globl main


main:
    # Imprimir mensaje de entrada
    li $v0, 4                
    la $a0, mensaje_input   
    syscall
    li $v0, 5                
    syscall
    sw $v0, n                
    lw $a0, n                
    jal factorial            
    move $t0, $v0            
    li $v0, 4                
    la $a0, mensaje_output   
    syscall
    move $a0, $t0            
    li $v0, 1                
    syscall
    li $v0, 10               
    syscall


factorial:
    move $t1, $a0            
    li $t2, 1                

factorial_loop:
    blez $t1, factorial_end  
    mult $t2, $t1            
    mflo $t2                 
    addi $t1, $t1, -1        
    j factorial_loop         

factorial_end:
    move $v0, $t2           
    jr $ra                   



